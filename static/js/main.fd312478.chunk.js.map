{"version":3,"sources":["web3.js","daoguard.js","people.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","Web3","eth","Contract","inputs","stateMutability","type","internalType","name","outputs","people","planet","address","App","state","selectedHealth","selectedEducation","selectedSocial","chosenPerson","loading","init","getStats","id","setState","console","log","Promise","r","setTimeout","daoguard","methods","entitiesHealth","call","healthValidity","entitiesEducation","educationValidity","entitiesSocial","socialValidity","choosePerson","className","src","map","person","index","onClick","this","style","filter","width","height","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd312478.chunk.js","sourcesContent":["import Web3 from \"web3\";\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\n\nconst web3 = new Web3(window.ethereum);\n\nexport default web3;\n","import web3 from \"./web3\";\n\nconst address = \"0xc418E5bCf7151197bED3D36f5b5fe19752f29F31\";\nconst abi = [\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"addr\", type: \"address\" },\n      { internalType: \"bool\", name: \"pass\", type: \"bool\" },\n    ],\n    name: \"addEducationEntity\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"addr\", type: \"address\" },\n      { internalType: \"bool\", name: \"pass\", type: \"bool\" },\n    ],\n    name: \"addHealthEntity\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"addr\", type: \"address\" },\n      { internalType: \"bool\", name: \"pass\", type: \"bool\" },\n    ],\n    name: \"addSocialEntity\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"creator\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"entitiesEducation\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"entitiesHealth\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"entitiesSocial\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport default new web3.eth.Contract(abi, address);\n","const people = [\n  {\n    name: \"Gregorium\",\n    planet: \"MARS\",\n    address: \"0x976EA74026E726554dB657fA54763abd0C3a0aa9\",\n  },\n  {\n    name: \"Joonas Köppä\",\n    planet: \"EARTH\",\n    address: \"0x5b7acF012bbf5c9F16eeaE4acb7D6DA0107c5bbB\",\n  },\n  {\n    name: \"Edoardo Piroddi\",\n    planet: \"EARTH\",\n    address: \"0xD4830F96d9Ed6d54E14b5FbC51538Caa14ca55b3\",\n  },\n  {\n    name: \"Nasim Ali\",\n    planet: \"EARTH\",\n    address: \"0x77eEA3df32A7Db871AA196854be1760e7B1B121A\",\n  },\n  {\n    name: \"Jing Tian\",\n    planet: \"EARTH\",\n    address: \"0x3695594CE9323Ef44Bea62667194CAB869A50315\",\n  },\n  {\n    name: \"Natalia Ruiz\",\n    planet: \"EARTH\",\n    address: \"0x20853C928c4b0C006fC49FA95197f67CBD4c1d78\",\n  },\n];\n\nexport default people;\n","import React from \"react\";\nimport daoguard from \"./daoguard\";\nimport people from \"./people\";\nimport \"./App.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    selectedHealth: \"health.svg\",\n    selectedEducation: \"education.svg\",\n    selectedSocial: \"social.svg\",\n    chosenPerson: 0,\n    loading: true,\n    init: true,\n  };\n\n  getStats = async (id) => {\n    this.setState({\n      selectedHealth: \"health.svg\",\n      selectedEducation: \"education.svg\",\n      selectedSocial: \"social.svg\",\n      loading: true,\n    });\n    console.log(this.state.selectedHealth);\n    await new Promise((r) => setTimeout(r, 500));\n    const healthValidity = await daoguard.methods\n      .entitiesHealth(people[id].address)\n      .call();\n    this.setState({\n      selectedHealth: healthValidity ? \"health-ok.svg\" : \"health-ko.svg\",\n    });\n    await new Promise((r) => setTimeout(r, 500));\n    const educationValidity = await daoguard.methods\n      .entitiesEducation(people[id].address)\n      .call();\n    this.setState({\n      selectedEducation: educationValidity\n        ? \"education-ok.svg\"\n        : \"education-ko.svg\",\n    });\n    await new Promise((r) => setTimeout(r, 500));\n    const socialValidity = await daoguard.methods\n      .entitiesSocial(people[id].address)\n      .call();\n    this.setState({\n      selectedSocial: socialValidity ? \"social-ok.svg\" : \"social-ko.svg\",\n    });\n    this.setState({\n      loading: false,\n    });\n  };\n\n  choosePerson = async (id) => {\n    this.setState({\n      chosenPerson: id,\n      init: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"navBar\">\n          <div className=\"logo\">\n            <img className=\"logo\" src=\"daoguard-logo.png\" />\n          </div>\n          <div className=\"peopleList\">\n            {people.map((person, index) => (\n              <div\n                onClick={() => {\n                  this.choosePerson(index);\n                  this.getStats(index);\n                }}\n                key={index}\n                className=\"personBox\"\n              >\n                <div className=\"personContainer\">\n                  <div className=\"avatarPic\">\n                    <img className=\"avatar\" src={\"avatar/\" + index + \".svg\"} />\n                  </div>\n                  <div className=\"personInfo\">\n                    <div>\n                      <p className=\"personName\">{person.name}</p>\n                      <p className=\"personAddr\">{person.address}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        {this.state.init ? (\n          <div className=\"content\">\n            <p className=\"proofOfLife\">PROOF OF LIFE</p>\n            <p className=\"choosePerson\">PLEASE CHOOSE A PERSON</p>\n            <img\n              style={{\n                filter: \"grayscale(100%)\",\n                width: \"170px\",\n                height: \"170px\",\n              }}\n              src=\"avatar-big/0.png\"\n            />\n          </div>\n        ) : (\n          <div className=\"content\">\n            <p className=\"proofOfLife\">PROOF OF LIFE</p>\n            <img\n              className=\"bigavatar\"\n              src={\"avatar-big/\" + this.state.chosenPerson + \".png\"}\n            />\n            <p className=\"contentName\">\n              {people[this.state.chosenPerson].name}\n            </p>\n            <p className=\"contentId\">\n              ID: {people[this.state.chosenPerson].address}\n            </p>\n            <p className=\"contentPlanet\">\n              PLANET <strong>{people[this.state.chosenPerson].planet}</strong>\n            </p>\n            <img\n              className=\"planetImg\"\n              src={people[this.state.chosenPerson].planet + \".svg\"}\n            />\n            <p className=\"contentProof\">\n              <strong>PROOF OF LIFE</strong>\n              {this.state.loading ? \" LOADING...\" : \"\"}\n            </p>\n            <div className=\"checks\">\n              <img src={this.state.selectedHealth} />\n              <img src={this.state.selectedEducation} />\n              <img src={this.state.selectedSocial} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}